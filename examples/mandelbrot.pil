
def putc(ch) {
    __asm__ "LOAD32 [SFP + 4]"
    __asm__ "CALLUSER"
}

def pdensity(d) 
    if d > 32.0
        putc(32)  // ' '
    else if d > 16.0 
        putc(46) // '.'
    else if d > 8.0 
        putc(58) // ':'
    else if d > 4.0 
        putc(45) // '-'
    else if d > 2.0
        putc(61) // '='
    else if d > 1.0 
         putc(42) // '*'
    else if d > 0.5 
        putc(37) // '%'
    else
        putc(64) // '@'

def mandelconverge(real, imag, iters, creal, cimag) 
    if real*real + imag*imag > 4
        iters
    else if iters > 254
        iters
    else 
        mandelconverge(real*real - imag*imag + creal, 2*real*imag + cimag, iters+1, creal, cimag)

def mandelhelp(xmin, xmax, xstep, ymin, ymax, ystep)
{
    y = ymin
    while y < ymax {
        x = xmin
        while x < xmax {
            pdensity(mandelconverge(x, y, 0, x, y))
            x = x + xstep
        }
        putc(10)
        y = y + ystep
    }
}

def mand(realstart, imagstart, realmag, imagmag)
    mandelhelp(realstart, realstart+realmag*120, realmag, imagstart, imagstart+imagmag*40, imagmag)

mand(0-2.1, 0-1.3, 0.027, 0.067)
